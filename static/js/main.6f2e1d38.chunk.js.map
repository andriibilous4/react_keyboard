{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleBtnClick","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAQaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,IAAKE,EAAMF,OAfjB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,kBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,kBAV/C,oBAmBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC+BM,KAAKP,MAAMC,IAD1C,KAEG,kCAzBd,GAAyBS,a,MCHzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.6f2e1d38.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\ntype State = {\n  key: string\n};\n\ntype Props = {};\n\nexport class App extends Component<Props, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleBtnClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleBtnClick);\n  }\n\n  handleBtnClick = (event: KeyboardEvent) => {\n    this.setState({\n      key: event.key,\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}